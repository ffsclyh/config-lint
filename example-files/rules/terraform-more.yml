version: 1
description: More rules for terraform
type: Terraform
files:
  - "*.tf"
rules:

  - id: ALB_LISTENER
    message: ALB listener security checks
    resource: aws_alb_listener
    severity: FAILURE
    assertions:
      - key: port
        op: eq
        value: 443
      - key: protocol
        op: ne
        value: http
        options: ignore-case
      - key: ssl_policy
        op: present
      - key: ssl_policy
        op: ne
        value: ELBSecurityPolicy-2015-05
      - key: ssl_policy
        op: ne
        value: ELBSecurityPolicy-TLS-1-0-2015-04
      - key: certificate_arn
        op: present
      - key: access_logs
        op: present
      - key: internal  # TODO if the default is true, then add an or that checks absent or is-true
        op: is-true

  - id: AMI
    message: AMI security checks
    resource: aws_ami
    severity: FAILURE
    assertions:
      - key: ebs_block_device.encrypted
        op: is-true
      - key: ebs_block_device.kms_key_id
        op: present
        
  - id: AMI_COPY
    message: AMI security checks
    resource: aws_ami_copy
    severity: FAILURE
    assertions:
      - key: ebs_block_device.encrypted
        op: is-true
      - key: ebs_block_device.kms_key_id
        op: present

  - id: API_GATEWAY_DOMAIN_NAME
    message: API Gateway checks
    resource: aws_api_gateway_domain_name
    severity: FAILURE
    assertions:
      - key: "@"
        op: has-properties
        value: certificate_name,certificate_body,certificate_change,certificate_private_key

  - id: INSTANCE
    message: Instance checks
    resource: aws_instance
    severity: FAILURE
    assertions:
      - or:
          - key: ebs_block_device
            op: absent
          - key: ebs_block_device.encrypted
            op: is-true
        
  - id: CLOUDFRONT_DISTRIBUTION
    message: CloudFront Distribution checks
    resource: aws_cloudfront_distribution
    severity: FAILURE
    assertions:
      - or:
        - key: origin.custom_origin_policy
          op: absent
        - key: origin.custom_origin_policy.origin_protocol_policy
          op: eq
          value: https-only
      - key: default_cache_behavior.viewer_protocol_policy
        op: ne
        value: allow-all
      - key: cache_behavior.viewer_protocol_policy
        op: ne
        value: allow-all
      - key: logging_config
        op: present

  - id: CLOUDTRAIL
    message: CloudTrail checks
    resource: aws_cloudtrail
    severity: FAILURE
    assertions:
      - key: kms_key_id
        op: present

  - id: CODEBUILD_PROJECT
    message: CodeBuild Project checks
    resource: aws_codebuild_project
    severity: FAILURE
    assertions:
      - key: encryption_key
        op: present

  - id: CODEPIPELINE
    message: CodePipeline checks
    resource: aws_codepipeline
    severity: FAILURE
    assertions:
      - key: encryption_key
        op: present

  - id: DB_INSTANCE
    message: DB Instance checks
    resource: aws_db_instance
    severity: FAILURE
    assertions:
      - key: storage_encrypted
        op: is-true
      - key: kms_key_id
        op: present

  - id: ELB
    message: ELB checks
    resource: aws_elb
    severity: FAILURE
    assertions:
      - key: access_logs
        op: present
      - key: listener.lb_port
        op: not-in
        value: 80,21,23,5900

  - id: DMS_REPLICATION_INSTANCE
    message: DMS Replication Instance checks
    resource: aws_dms_replication_instance
    severity: FAILURE
    assertions: 
      - key: kms_key_arn
        op: present

  - id: EBS_VOLUME
    message: EBS Volume checks
    resource: aws_ebs_volume
    severity: FAILURE
    assertions:
      - key: encrypted
        op: is-true
      - key: kms_key_id
        op: present

  - id: EFS
    message: EFS Checks
    resource: aws_efs_file_system
    severity: FAILURE
    assertions:
      - key: encrypted
        op: is-true
      - key: kms_key_id
        op: present
 
  - id: ELASTICTRANSCODE_PIPELINE
    message: ElasticTranscoderPipeline checks
    resource: aws_elastictranscoder_pipeline
    severity: FAILURE
    assertions:
      - key: aws_kms_key_arn
        op: present

  - id: KINESIS_FIREHOSE_DELIVERY_STREAM
    message: KinesisFirehoseDeliveryStream checks 
    resource: aws_kinesis_firehose_delivery_stream
    severity: FAILURE
    assertions:
      - or:
        - key: s3_configuration.kms_key_arn
          op: present
        - key: extended_s3_configuration.kms_key_arn
          op: present

  - id: LAMBDA_FUNCTION
    message: Lambda checks
    resource: aws_lambda_function
    severity: FAILURE
    assertions:
      - key: kms_key_arn
        op: present

  - id: OPSWORKS_APPLICATION
    message: OpsWorks Application checks
    resource: aws_opsworks_application
    severity: FAILURE
    assertions:
      - key: enable_ssl
        op: is-true

  - id: RDS_CLUSTER
    message: RDSCluster checks
    resource: aws_rds_cluster
    severity: FAILURE
    assertions:
      - key: storage_encrypted
        op: is-true
      - key: kms_key_id
        op: present

  - id: REDSHIFT_CLUSTER
    message: RedshiftCluster checks
    resource: aws_redshift_cluster
    severity: FAILURE
    assertions:
      - key: encrypted
        op: is-true
      - key: kms_key_id
        op: present

  - id: S3_BUCKET_OBJECT
    message: S3 Bucket Object checks
    resource: aws_s3_bucket_object
    severity: FAILURE
    assertions:
      - key: kms_key_id
        op: present

  - id: SQS_QUEUE
    message: SQSQueue checks    
    resource: aws_sqs_queue
    severity: FAILURE
    assertions:
      - key: "@"
        op: has-properties 
        value: kms_master_key_id,kms_data_key_reuse_period_seconds
