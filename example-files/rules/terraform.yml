version: 1
description: Rules for Terraform configuration files
type: Terraform
files:
  - "*.tf"
rules:

  - id: R1
    message: Instance type should be t2.micro or m3.medium
    resource: aws_instance
    assertions:
      - key: instance_type
        op: in
        value: t2.micro,m3.medium
    severity: WARNING
    tags:
      - ec2

  - id: R2
    message: Not an approved AMI
    resource: aws_instance
    assertions:
      - key: ami
        op: in
        value: ami-f2d3638a
    severity: FAILURE
    tags:
      - ec2

  - id: R3
    message: Department tag is not valid
    resource: aws_instance
    except:
        - foo
        - third
    assertions:
      - key: "tags[].Department | [0]"
        op: in
        value: Operations,Sales,Marketing,Engineering
    severity: WARNING
    tags:
      - ec2

  - id: R4
    message: CostCenter tag is missing
    resource: aws_instance
    assertions:
      - key: "tags[].CostCenter | [0]"
        op: present
    severity: FAILURE

  - id: ORTEST
    resource: aws_instance
    message: Should have instance_type of t2.micro or m3.medium
    severity: WARNING
    assertions:
      - or:
        - key: instance_type
          op: eq
          value: t2.micro
        - key: instance_type
          op: eq
          value: m3.medium

  - id: ANDTEST
    resource: aws_instance
    message: Should have both Project and Department tags
    severity: WARNING
    assertions:
      - and:
        - key: "tags[].Department | [0]"
          op: present
        - key: "tags[].Project | [0]"
          op: present
    tags:
      - and-test

  - id: NOTTEST
    resource: aws_instance
    message: Should not have instance type of c4.large
    severity: WARNING
    assertions:
      - not:
        - key: instance_type
          op: eq
          value: c4.large

  - id: EBS_ENCRYPTION
    resource: aws_ebs_volume
    message: EBS Volumes must be encrypted
    severity: FAILURE
    assertions:
      - key: encrypted
        op: eq
        value: true
    tags:
      - ebs

  - id: SG_WORLD_INGRESS
    resource: aws_security_group
    message: Security group should not allow ingress from 0.0.0.0/0 or ::/0
    severity: WARNING
    assertions:
      - not:
        - or:
          - key: "ingress[].cidr_blocks[]"
            op: contains
            value: "0.0.0.0/0"
          - key: "ingress[].cidr_blocks[]"
            op: contains
            value: "::/0"
    tags:
      - sg

  - id: SG_WORLD_EGRESS
    resource: aws_security_group
    message: Security group should not allow egress to 0.0.0.0/0 or ::/0
    severity: WARNING
    assertions:
      - not:
        - or:
          - key: "egress[].cidr_blocks[]"
            op: contains
            value: "0.0.0.0/0"
          - key: "egress[].cidr_blocks[]"
            op: contains
            value: "::/0"
    tags:
      - sg


  - id: SG_SSH_WORLD_INGRESS
    resource: aws_security_group
    message: Security group should not allow ingress from 0.0.0.0/0 or ::/0
    severity: FAILURE
    assertions:
      - not:
        - or:
          - key: "ingress[?(from_port==`22`)].cidr_blocks[]"
            op: contains
            value: "0.0.0.0/0"
          - key: "ingress[?(from_port==`22`)].cidr_blocks[]"
            op: contains
            value: "::/0"
    tags:
      - sg

  - id: SG_RD_WORLD_INGRESS
    resource: aws_security_group
    message: Security group should not allow ingress from 0.0.0.0/0 or ::/0
    severity: FAILURE
    assertions:
      - not:
        - or:
          - key: "ingress[?(from_port==`3389`)].cidr_blocks[]"
            op: contains
            value: "0.0.0.0/0"
          - key: "ingress[?(from_port==`3389`)].cidr_blocks[]"
            op: contains
            value: "::/0"
    tags:
      - sg

  - id: SG_NON_32_INGRESS
    resource: aws_security_group
    message: Security group should not allow ingress from CIDR block that does not end in /32
    severity: WARNING
    assertions:
      - key: "ingress[].cidr_blocks[] | [0]"
        op: regex
        value: ".*/32$"
    tags:
      - sg

  - id: SG_INGRESS_PORT_RANGE
    resource: aws_security_group
    message: Security group ingress should specify single port instead of range
    severity: WARNING
    assertions:
      - key: "ingress[?(from_port!=to_port)]"
        op: empty
    tags:
      - sg

  - id: SG_EGRESS_PORT_RANGE
    resource: aws_security_group
    message: Security group egress should specify single port instead of range
    severity: WARNING
    assertions:
      - key: "egress[?(from_port!=to_port)]"
        op: empty
    tags:
      - sg

  - id: SG_MISSING_EGRESS
    resource: aws_security_group
    message: Security group should specify egress rules
    severity: WARNING
    assertions:
      - key: "egress"
        op: present
    tags:
      - sg

  - id: VALUE_FROM_S3
    message: Instance type should be in list from S3 object
    resource: aws_instance
    assertions:
      - key: instance_type
        op: in
        value_from:
          url: s3://config-rules-for-lambda/instance-types
    severity: WARNING
    tags:
      - ec2

  - id: VALUE_FROM_HTTPS
    message: Instance type should be in list from https endpoint
    resource: aws_instance
    assertions:
      - key: instance_type
        op: in
        value_from:
          url: https://19kfojjbi2.execute-api.us-east-1.amazonaws.com/dev/instance_types
    severity: WARNING
    tags:
      - ec2

  - id: CLOUDFRONT_LOGGING
    message: CloudFront Distribution must configure logging
    resource: s3_distribution
    severity: FAILURE
    assertions:
      - key: logging_config
        op: present

  - id: POLICY_NOT_ACTION
    message: Should not use NotAction in IAM policy
    resource: aws_iam_policy
    severity: WARNING
    assertions:
      - key: policy.Statement[].NotAction
        op: absent
    tags:
      - iam

  - id: POLICY_NOT_RESOURCE
    message: Should not use NotResource in IAM policy
    resource: aws_iam_policy
    severity: WARNING
    assertions:
      - key: policy.Statement[].NotResource
        op: absent
    tags:
      - iam

  - id: POLICY_WILDCARD_ACTION
    message: Should not use wildcard action in IAM policy
    resource: aws_iam_policy
    severity: FAILURE
    assertions:
      - not:
        - key: policy.Statement[].Action
          op: contains
          value: "*"
    tags:
      - iam

  - id: POLICY_WILDCARD_RESOURCE
    message: Should not use wildcard resource in IAM policy
    resource: aws_iam_policy
    severity: WARNING
    assertions:
      - not:
        - key: policy.Statement[].Resource
          op: contains
          value: "*"
    tags:
      - iam

  - id: ROLE_NOT_ACTION
    message: Should not use NotAction in IAM role
    resource: aws_iam_role
    severity: WARNING
    assertions:
      - key: assume_role_policy.Statement[].NotAction
        op: absent
    tags:
      - iam

  - id: ROLE_NOT_RESOURCE
    message: Should not use NotResource in IAM role
    resource: aws_iam_role
    severity: WARNING
    assertions:
      - key: assume_role_policy.Statement[].NotResource
        op: absent
    tags:
      - iam

  - id: ELB_ACCESS_LOGGING
    message: ELB should enable access logging
    resource: aws_elb
    severity: WARNING
    assertions:
      - key: access_logs
        op: present
    tags:
      - elb

  - id: S3_BUCKET_NAME
    message: Bucket name is invalid
    resource: aws_s3_bucket
    assertions:
      - key: bucket
        op: regex
        value: "^[a-z0-9.-]+$"
    severity: FAILURE
    tags:
      - s3

  - id: S3_NOT_ACTION
    message: SHould not use NotAction in S3 bucket policy
    resource: aws_s3_bucket_policy
    severity: WARNING
    assertions:
      - key: policy.Statement[].NotAction
        op: absent
    tags:
      - s3

  - id: S3_NOT_PRINCIPAL
    message: Should not use NotPrincipal in S3 bucket policy
    resource: aws_s3_bucket_policy
    severity: WARNING
    assertions:
      - key: policy.Statement[].NotPrincipal
        op: absent
    tags:
      - s3

  - id: S3_BUCKET_POLICY_WILDCARD_PRINCIPAL
    message: Should not use wildcard principal in S3 bucket policy
    resource: aws_s3_bucket_policy
    severity: WARNING
    assertions:
      - not:
        - key: policy.Statement[].Principal
          op: contains
          value: "*"
    tags:
      - s3

  - id: S3_BUCKET_POLICY_WILDCARD_ACTION
    message: Should not use wildcard Principal in S3 bucket policy
    resource: aws_s3_bucket_policy
    severity: WARNING
    assertions:
      - not:
        - key: policy.Statement[].Action
          op: contains
          value: "*"
    tags:
      - s3

  - id: SNS_TOPIC_POLICY_WILDCARD_PRINCIPAL
    message: Should not use wildcard Principal in SNS topic policy
    resource: aws_sns_topic_policy
    severity: WARNING
    assertions:
      - not:
        - key: policy.Statement[].Principal
          op: contains
          value: "*"
    tags:
      - sns

  - id: SNS_TOPIC_POLICY_NOT_ACTION
    message: Should not use NotAction in SNS topic policy
    resource: aws_sns_topic_policy
    severity: WARNING
    assertions:
      - key: policy.Statement[].NotAction
        op: absent
    tags:
      - sns

  - id: SNS_TOPIC_POLICY_NOT_PRINCIPAL
    message: Should not use NotPrincipal in SNS topic policy
    resource: aws_sns_topic_policy
    severity: WARNING
    assertions:
      - key: policy.Statement[].NotPrincipal
        op: absent
    tags:
      - sns

  - id: SQS_QUEUE_POLICY_WILDCARD_PRINCIPAL
    message: Should not use wildcard principal in SQS queue policy
    resource: aws_sqs_queue_policy
    severity: WARNING
    assertions:
      - not:
        - key: policy.Statement[].Principal
          op: contains
          value: "*"
    tags:
      - sqs

  - id: SQS_QUEUE_POLICY_WILDCARD_ACTION
    message: Should not use wildcard action in SQS queue policy
    resource: aws_sqs_queue_policy
    severity: WARNING
    assertions:
      - not:
        - key: policy.Statement[].Action
          op: contains
          value: "*"
    tags:
      - sqs

  - id: SQS_QUEUE_POLICY_NOT_ACTION
    message: Should not use NotAction in SQS queue policy
    resource: aws_sqs_queue_policy
    severity: WARNING
    assertions:
      - key: policy.Statement[].NotAction
        op: absent
    tags:
      - sqs

  - id: SQS_QUEUE_POLICY_NOT_PRINCIPAL
    message: Should not use NotPrincipal in SQS queue policy
    resource: aws_sqs_queue_policy
    severity: WARNING
    assertions:
      - key: policy.Statement[].NotPrincipal
        op: absent
    tags:
      - sqs
